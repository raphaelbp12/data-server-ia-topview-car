// <auto-generated />
using System;
using DatabaseModels;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace dotnet_core_flicker_project_server.Migrations
{
    [DbContext(typeof(CarContext))]
    [Migration("20210524181429_Init")]
    partial class Init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.6")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

            modelBuilder.Entity("DatabaseModels.CarModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("Weights")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Cars");
                });

            modelBuilder.Entity("DatabaseModels.CarScoreModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int?>("CarId")
                        .HasColumnType("integer");

                    b.Property<int?>("ScoreId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("CarId");

                    b.HasIndex("ScoreId");

                    b.ToTable("CarScores");
                });

            modelBuilder.Entity("DatabaseModels.GenerationCarModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int?>("CarId")
                        .HasColumnType("integer");

                    b.Property<int?>("GenerationId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("CarId");

                    b.HasIndex("GenerationId");

                    b.ToTable("GenerationCars");
                });

            modelBuilder.Entity("DatabaseModels.GenerationModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Generations");
                });

            modelBuilder.Entity("DatabaseModels.ParentsModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int?>("ChildId")
                        .HasColumnType("integer");

                    b.Property<int?>("FatherId")
                        .HasColumnType("integer");

                    b.Property<int?>("MotherId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("ChildId");

                    b.HasIndex("FatherId");

                    b.HasIndex("MotherId");

                    b.ToTable("Parents");
                });

            modelBuilder.Entity("DatabaseModels.PopulationGenerationModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int?>("GenerationId")
                        .HasColumnType("integer");

                    b.Property<int?>("PopulationId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("GenerationId");

                    b.HasIndex("PopulationId");

                    b.ToTable("PopulationGenerations");
                });

            modelBuilder.Entity("DatabaseModels.PopulationModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Populations");
                });

            modelBuilder.Entity("DatabaseModels.ScoreModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("TrackId")
                        .HasColumnType("integer");

                    b.Property<float>("Value")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.ToTable("Scores");
                });

            modelBuilder.Entity("DatabaseModels.CarScoreModel", b =>
                {
                    b.HasOne("DatabaseModels.CarModel", "Car")
                        .WithMany()
                        .HasForeignKey("CarId");

                    b.HasOne("DatabaseModels.ScoreModel", "Score")
                        .WithMany()
                        .HasForeignKey("ScoreId");

                    b.Navigation("Car");

                    b.Navigation("Score");
                });

            modelBuilder.Entity("DatabaseModels.GenerationCarModel", b =>
                {
                    b.HasOne("DatabaseModels.CarModel", "Car")
                        .WithMany()
                        .HasForeignKey("CarId");

                    b.HasOne("DatabaseModels.GenerationModel", "Generation")
                        .WithMany()
                        .HasForeignKey("GenerationId");

                    b.Navigation("Car");

                    b.Navigation("Generation");
                });

            modelBuilder.Entity("DatabaseModels.ParentsModel", b =>
                {
                    b.HasOne("DatabaseModels.CarModel", "Child")
                        .WithMany()
                        .HasForeignKey("ChildId");

                    b.HasOne("DatabaseModels.CarModel", "Father")
                        .WithMany()
                        .HasForeignKey("FatherId");

                    b.HasOne("DatabaseModels.CarModel", "Mother")
                        .WithMany()
                        .HasForeignKey("MotherId");

                    b.Navigation("Child");

                    b.Navigation("Father");

                    b.Navigation("Mother");
                });

            modelBuilder.Entity("DatabaseModels.PopulationGenerationModel", b =>
                {
                    b.HasOne("DatabaseModels.GenerationModel", "Generation")
                        .WithMany()
                        .HasForeignKey("GenerationId");

                    b.HasOne("DatabaseModels.PopulationModel", "Population")
                        .WithMany()
                        .HasForeignKey("PopulationId");

                    b.Navigation("Generation");

                    b.Navigation("Population");
                });
#pragma warning restore 612, 618
        }
    }
}
